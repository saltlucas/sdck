<?php function mytheme_images_box() {	global $post;	?>	<div id="product_images_container">		<ul class="product_images">			<?php				if ( metadata_exists( 'post', $post->ID, 'product_image_gallery' ) ) {					$product_image_gallery = get_post_meta( $post->ID, 'product_image_gallery', true );				} else {					// Backwards compat					$attachment_ids = get_posts( 'post_parent=' . $post->ID . '&numberposts=-1&post_type=attachment&orderby=menu_order&order=ASC&post_mime_type=image&fields=ids&meta_key=product_image_gallery&meta_value=0' );					$attachment_ids = array_diff( $attachment_ids, array( get_post_thumbnail_id() ) );					$product_image_gallery = implode( ',', $attachment_ids );				}				$attachments = array_filter( explode( ',', $product_image_gallery ) );				if ( $attachments )					foreach ( $attachments as $attachment_id ) {						echo '<li class="image" data-attachment_id="' . $attachment_id . '">							' . wp_get_attachment_image( $attachment_id, 'thumbnail' ) . '							<ul class="actions">								<li><a href="#" class="delete" title="' . __( 'Delete image', 'myTheme' ) . '">' . __( 'Delete', 'myTheme' ) . '</a></li>							</ul>						</li>';					}			?>		</ul>		<input type="hidden" id="product_image_gallery" name="product_image_gallery" value="<?php echo esc_attr( $product_image_gallery ); ?>" />	</div>	<p class="add_product_images hide-if-no-js">		<a href="#"><?php _e( 'Add gallery images', 'myTheme' ); ?></a>	</p>	<script type="text/javascript">		jQuery(document).ready(function($){			// Uploading files			var product_gallery_frame;			var $image_gallery_ids = $('#product_image_gallery');			var $product_images = $('#product_images_container ul.product_images');			jQuery('.add_product_images').on( 'click', 'a', function( event ) {				var $el = $(this);				var attachment_ids = $image_gallery_ids.val();				event.preventDefault();				// If the media frame already exists, reopen it.				if ( product_gallery_frame ) {					product_gallery_frame.open();					return;				}				// Create the media frame.				product_gallery_frame = wp.media.frames.downloadable_file = wp.media({					// Set the title of the modal.					title: '<?php _e( 'Add Images to Gallery', 'myTheme' ); ?>',					button: {						text: '<?php _e( 'Add to gallery', 'myTheme' ); ?>',					},					multiple: true				});				// When an image is selected, run a callback.				product_gallery_frame.on( 'select', function() {					var selection = product_gallery_frame.state().get('selection');					selection.map( function( attachment ) {						attachment = attachment.toJSON();						if ( attachment.id ) {							attachment_ids = attachment_ids ? attachment_ids + "," + attachment.id : attachment.id;							$product_images.append('\								<li class="image" data-attachment_id="' + attachment.id + '">\									<img src="' + attachment.url + '" />\									<ul class="actions">\										<li><a href="#" class="delete" title="<?php _e( 'Delete image', 'myTheme' ); ?>"><?php _e( 'Delete', 'myTheme' ); ?></a></li>\									</ul>\								</li>');						}					} );					$image_gallery_ids.val( attachment_ids );				});				// Finally, open the modal.				product_gallery_frame.open();			});			// Image ordering			$product_images.sortable({				items: 'li.image',				cursor: 'move',				scrollSensitivity:40,				forcePlaceholderSize: true,				forceHelperSize: false,				helper: 'clone',				opacity: 0.65,				placeholder: 'wc-metabox-sortable-placeholder',				start:function(event,ui){					ui.item.css('background-color','#f6f6f6');				},				stop:function(event,ui){					ui.item.removeAttr('style');				},				update: function(event, ui) {					var attachment_ids = '';					$('#product_images_container ul li.image').css('cursor','default').each(function() {						var attachment_id = jQuery(this).attr( 'data-attachment_id' );						attachment_ids = attachment_ids + attachment_id + ',';					});					$image_gallery_ids.val( attachment_ids );				}			});			// Remove images			$('#product_images_container').on( 'click', 'a.delete', function() {				$(this).closest('li.image').remove();				var attachment_ids = '';				$('#product_images_container ul li.image').css('cursor','default').each(function() {					var attachment_id = jQuery(this).attr( 'data-attachment_id' );					attachment_ids = attachment_ids + attachment_id + ',';				});				$image_gallery_ids.val( attachment_ids );				return false;			} );		});	</script>	<?php}function mytheme_clean( $var ) {	return sanitize_text_field( $var );}add_action('admin_menu', 'add_gallery_box');function add_gallery_box () {	global $post;	$template_dir = get_template_directory_uri();	wp_register_style( 'post-admin-css', $template_dir . '/css/admin-gallery.css' );	wp_enqueue_style( 'post-admin-css' );	add_action('save_post', 'process_gallery_meta', 1, 2);	add_meta_box( 'mytheme-images', __( 'My Gallery', 'myTheme' ), 'mytheme_images_box', 'page', 'side' );}function process_gallery_meta( $post_id, $post ) {	global $wpdb, $post;		// Gallery Images	$attachment_ids = array_filter( explode( ',', mytheme_clean( $_POST['product_image_gallery'] ) ) );	update_post_meta( $post_id, 'product_image_gallery', implode( ',', $attachment_ids ) );		}
?>